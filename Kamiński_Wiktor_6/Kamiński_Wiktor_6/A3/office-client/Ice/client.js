//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.5
//
// <auto-generated>
//
// Generated from file `client.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

/* eslint-disable */
/* jshint ignore: start */

(function(module, require, exports)
{
    const Ice = require("ice").Ice;
    const _ModuleRegistry = Ice._ModuleRegistry;
    const Slice = Ice.Slice;

    let client = _ModuleRegistry.module("client");

    client.Time = class
    {
        constructor(hour = 0, minute = 0, second = 0)
        {
            this.hour = hour;
            this.minute = minute;
            this.second = second;
        }

        _write(ostr)
        {
            ostr.writeInt(this.hour);
            ostr.writeInt(this.minute);
            ostr.writeInt(this.second);
        }

        _read(istr)
        {
            this.hour = istr.readInt();
            this.minute = istr.readInt();
            this.second = istr.readInt();
        }

        static get minWireSize()
        {
            return  12;
        }
    };

    Slice.defineStruct(client.Time, true, false);

    client.ReportResult = class
    {
        constructor(reportTime = new client.Time(), resultTime = 0, result = false, message = "")
        {
            this.reportTime = reportTime;
            this.resultTime = resultTime;
            this.result = result;
            this.message = message;
        }

        _write(ostr)
        {
            client.Time.write(ostr, this.reportTime);
            ostr.writeInt(this.resultTime);
            ostr.writeBool(this.result);
            ostr.writeString(this.message);
        }

        _read(istr)
        {
            this.reportTime = client.Time.read(istr, this.reportTime);
            this.resultTime = istr.readInt();
            this.result = istr.readBool();
            this.message = istr.readString();
        }

        static get minWireSize()
        {
            return  18;
        }
    };

    Slice.defineStruct(client.ReportResult, true, true);

    Slice.defineSequence(client, "ResultListHelper", "client.ReportResult", false);

    const iceC_client_Reporter_ids = [
        "::Ice::Object",
        "::client::Reporter"
    ];

    client.Reporter = class extends Ice.Object
    {
    };

    client.ReporterPrx = class extends Ice.ObjectPrx
    {
    };

    Slice.defineOperations(client.Reporter, client.ReporterPrx, iceC_client_Reporter_ids, 1,
    {
        "sendResults": [, , , , , [["client.ResultListHelper"]], , , , ]
    });
    exports.client = client;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require :
 (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope) ? self.Ice._require : window.Ice._require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports :
 (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope) ? self : window));
